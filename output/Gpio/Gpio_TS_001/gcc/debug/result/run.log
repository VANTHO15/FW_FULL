Project.SetDevice ("STM32F407VG");
Target core support plugin loaded.: C:/Program Files/SEGGER/Ozone/Plugins/Core/CorePluginARM.dll
Project.SetHostIF ("USB", "59768862");
Project.SetTargetIF ("JTAG");
Project.SetTIFSpeed ("4 MHz");
File.Open ("F:/IAR/FW_THO/FW_THO/FW_HuLa-master/output/Gpio/Gpio_TS_001/gcc/compile/Gpio_TS_001.elf");
Target.EraseChip();
Jdebug script: OnProjectLoad is running
No CPU register set description file specified, loading default: C:/Program Files/SEGGER/Ozone/Config/CPU/Cortex-M4F.svd.
Project.AddSvdFile ("C:/Program Files/SEGGER/Ozone/Config/CPU/Cortex-M4F.svd");
File.Open: completed in 155 ms
Program segments:
  Address         Size         Code      RO Data      RW Data      ZI Data    Flg
---------    ---------    ---------    ---------    ---------    ---------    ---
 08000000        4 544        4 544            0            0            0    RWE
 20000000          560            0            0          560            0    RW
 200157C0        2 544            0            0        2 544            0    RW
---------    ---------    ---------    ---------    ---------    ---------    ---
   Total:        7 648        4 544            0        3 104            0
---------    ---------    ---------    ---------    ---------    ---------    ---
For further information on ELF file data sections, execute command Elf.PrintSectionInfo(0).
Debug.ReadIntoInstCache: updated instruction information within 1 code ranges (0x08000000-0x080011C0)
Debug.Start();
Device "STM32F407VG" selected.
InitTarget() start
JTAG selected. Identifying JTAG Chain...
TotalIRLen = 9, IRPrint = 0x0011
JTAG chain detection found 2 devices:
 #0 Id: 0x4BA00477, IRLen: 04, CoreSight JTAG-DP
 #1 Id: 0x06431041, IRLen: 05, STM32 Boundary Scan
JTAG Chain Identified. Connecting to DAP TAP...
Successfully connected to selected DAP TAP.
DAP initialized successfully.
InitTarget() end - Took 7ms
TotalIRLen = 9, IRPrint = 0x0011
JTAG chain detection found 2 devices:
 #0 Id: 0x4BA00477, IRLen: 04, CoreSight JTAG-DP
 #1 Id: 0x06431041, IRLen: 05, STM32 Boundary Scan
DPv0 detected
Scanning AP map to find all available APs
AP[1]: Stopped AP scan as end of AP map has been reached
AP[0]: AHB-AP (IDR: 0x24770011)
Iterating through AP map to find AHB-AP to use
AP[0]: Core found
AP[0]: AHB-AP ROM base: 0xE00FF000
CPUID register: 0x410FC241. Implementer code: 0x41 (ARM)
Found Cortex-M4 r0p1, Little endian.
FPUnit: 6 code (BP) slots and 2 literal slots
CoreSight components:
ROMTbl[0] @ E00FF000
[0][0]: E000E000 CID B105E00D PID 000BB00C SCS-M7
[0][1]: E0001000 CID B105E00D PID 003BB002 DWT
[0][2]: E0002000 CID B105E00D PID 002BB003 FPB
[0][3]: E0000000 CID B105E00D PID 003BB001 ITM
[0][4]: E0040000 CID B105900D PID 000BB9A1 TPIU
[0][5]: E0041000 CID B105900D PID 000BB925 ETM
Connected to target device.
Reset: Halt core after reset via DEMCR.VC_CORERESET.
Reset: Reset device via AIRCR.SYSRESETREQ.
T-bit of XPSR is 0 but should be 1. Changed to 1.
Jdebug script: AfterTargetReset is running
Elf.GetBaseAddr(); // returns 0x8000000
Target.ReadU32 (0x08000000); // returns 0x4, data is 0xF826F000
Target.SetReg ("SP", 0xF826F000);
Elf.GetEntryPointPC(); // returns 0x8000000
Target.SetReg ("PC", 0x8000000);
J-Link: Flash download: Bank 0 @ 0x08000000: Skipped. Contents already match
Jdebug script: AfterTargetDownload is running
Elf.GetBaseAddr(); // returns 0x8000000
Target.ReadU32 (0x08000000); // returns 0x4, data is 0xF826F000
Target.SetReg ("SP", 0xF826F000);
Elf.GetEntryPointPC(); // returns 0x8000000
Target.SetReg ("PC", 0x8000000);
Startup complete (PC=0x080009BC)
Jdebug script: OnStartupComplete is running
Break.Set (0x08000978);
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x80009BC
Connection to target device lost.
OnDisconnectTarget() start
OnDisconnectTarget() end - Took 0ms
Disconnected from target device.
Debug.Start();
Device "STM32F407VG" selected.
InitTarget() start
JTAG selected. Identifying JTAG Chain...
TotalIRLen = 9, IRPrint = 0x0011
JTAG chain detection found 2 devices:
 #0 Id: 0x4BA00477, IRLen: 04, CoreSight JTAG-DP
 #1 Id: 0x06431041, IRLen: 05, STM32 Boundary Scan
JTAG Chain Identified. Connecting to DAP TAP...
Successfully connected to selected DAP TAP.
DAP initialized successfully.
InitTarget() end - Took 8ms
TotalIRLen = 9, IRPrint = 0x0011
JTAG chain detection found 2 devices:
 #0 Id: 0x4BA00477, IRLen: 04, CoreSight JTAG-DP
 #1 Id: 0x06431041, IRLen: 05, STM32 Boundary Scan
DPv0 detected
Scanning AP map to find all available APs
AP[1]: Stopped AP scan as end of AP map has been reached
AP[0]: AHB-AP (IDR: 0x24770011)
Iterating through AP map to find AHB-AP to use
AP[0]: Core found
AP[0]: AHB-AP ROM base: 0xE00FF000
CPUID register: 0x410FC241. Implementer code: 0x41 (ARM)
Found Cortex-M4 r0p1, Little endian.
FPUnit: 6 code (BP) slots and 2 literal slots
CoreSight components:
ROMTbl[0] @ E00FF000
[0][0]: E000E000 CID B105E00D PID 000BB00C SCS-M7
[0][1]: E0001000 CID B105E00D PID 003BB002 DWT
[0][2]: E0002000 CID B105E00D PID 002BB003 FPB
[0][3]: E0000000 CID B105E00D PID 003BB001 ITM
[0][4]: E0040000 CID B105900D PID 000BB9A1 TPIU
[0][5]: E0041000 CID B105900D PID 000BB925 ETM
Connected to target device.
Reset: Halt core after reset via DEMCR.VC_CORERESET.
Reset: Reset device via AIRCR.SYSRESETREQ.
T-bit of XPSR is 0 but should be 1. Changed to 1.
Jdebug script: AfterTargetReset is running
Elf.GetBaseAddr(); // returns 0x8000000
Target.ReadU32 (0x08000000); // returns 0x4, data is 0xF826F000
Target.SetReg ("SP", 0xF826F000);
Elf.GetEntryPointPC(); // returns 0x8000000
Target.SetReg ("PC", 0x8000000);
J-Link: Flash download: Bank 0 @ 0x08000000: Skipped. Contents already match
Jdebug script: AfterTargetDownload is running
Elf.GetBaseAddr(); // returns 0x8000000
Target.ReadU32 (0x08000000); // returns 0x4, data is 0xF826F000
Target.SetReg ("SP", 0xF826F000);
Elf.GetEntryPointPC(); // returns 0x8000000
Target.SetReg ("PC", 0x8000000);
Startup complete (PC=0x080009BC)
Jdebug script: OnStartupComplete is running
Break.Set (0x08000978);
Break.Set (0x08000978): Breakpoint already set.
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x80009BC
Debug.Continue();
Debug.Stop();
OnDisconnectTarget() start
OnDisconnectTarget() end - Took 0ms
Disconnected from target device.
Debug.Start();
Device "STM32F407VG" selected.
InitTarget() start
JTAG selected. Identifying JTAG Chain...
TotalIRLen = 9, IRPrint = 0x0011
JTAG chain detection found 2 devices:
 #0 Id: 0x4BA00477, IRLen: 04, CoreSight JTAG-DP
 #1 Id: 0x06431041, IRLen: 05, STM32 Boundary Scan
JTAG Chain Identified. Connecting to DAP TAP...
Successfully connected to selected DAP TAP.
DAP initialized successfully.
InitTarget() end - Took 8ms
TotalIRLen = 9, IRPrint = 0x0011
JTAG chain detection found 2 devices:
 #0 Id: 0x4BA00477, IRLen: 04, CoreSight JTAG-DP
 #1 Id: 0x06431041, IRLen: 05, STM32 Boundary Scan
DPv0 detected
Scanning AP map to find all available APs
AP[1]: Stopped AP scan as end of AP map has been reached
AP[0]: AHB-AP (IDR: 0x24770011)
Iterating through AP map to find AHB-AP to use
AP[0]: Core found
AP[0]: AHB-AP ROM base: 0xE00FF000
CPUID register: 0x410FC241. Implementer code: 0x41 (ARM)
Found Cortex-M4 r0p1, Little endian.
FPUnit: 6 code (BP) slots and 2 literal slots
CoreSight components:
ROMTbl[0] @ E00FF000
[0][0]: E000E000 CID B105E00D PID 000BB00C SCS-M7
[0][1]: E0001000 CID B105E00D PID 003BB002 DWT
[0][2]: E0002000 CID B105E00D PID 002BB003 FPB
[0][3]: E0000000 CID B105E00D PID 003BB001 ITM
[0][4]: E0040000 CID B105900D PID 000BB9A1 TPIU
[0][5]: E0041000 CID B105900D PID 000BB925 ETM
Connected to target device.
Reset: Halt core after reset via DEMCR.VC_CORERESET.
Reset: Reset device via AIRCR.SYSRESETREQ.
T-bit of XPSR is 0 but should be 1. Changed to 1.
Jdebug script: AfterTargetReset is running
Elf.GetBaseAddr(); // returns 0x8000000
Target.ReadU32 (0x08000000); // returns 0x4, data is 0xF826F000
Target.SetReg ("SP", 0xF826F000);
Elf.GetEntryPointPC(); // returns 0x8000000
Target.SetReg ("PC", 0x8000000);
J-Link: Flash download: Bank 0 @ 0x08000000: Skipped. Contents already match
Jdebug script: AfterTargetDownload is running
Elf.GetBaseAddr(); // returns 0x8000000
Target.ReadU32 (0x08000000); // returns 0x4, data is 0xF826F000
Target.SetReg ("SP", 0xF826F000);
Elf.GetEntryPointPC(); // returns 0x8000000
Target.SetReg ("PC", 0x8000000);
Startup complete (PC=0x080009BC)
Jdebug script: OnStartupComplete is running
Break.Set (0x08000978);
Break.Set (0x08000978): Breakpoint already set.
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x80009BC
Debug.SetResetMode (RM_BREAK_AT_SYMBOL);
Debug.Reset();
Reset: Halt core after reset via DEMCR.VC_CORERESET.
Reset: Reset device via AIRCR.SYSRESETREQ.
T-bit of XPSR is 0 but should be 1. Changed to 1.
Jdebug script: AfterTargetReset is running
Elf.GetBaseAddr(); // returns 0x8000000
Target.ReadU32 (0x08000000); // returns 0x4, data is 0xF826F000
Target.SetReg ("SP", 0xF826F000);
Elf.GetEntryPointPC(); // returns 0x8000000
Target.SetReg ("PC", 0x8000000);
Startup complete (PC=0x080009BC)
Jdebug script: OnStartupComplete is running
Break.Set (0x08000978);
Break.Set (0x08000978): Breakpoint already set.
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x80009BC
Debug.SetResetMode (RM_RESET_HALT);
Debug.Reset();
Reset: Halt core after reset via DEMCR.VC_CORERESET.
Reset: Reset device via AIRCR.SYSRESETREQ.
T-bit of XPSR is 0 but should be 1. Changed to 1.
Jdebug script: AfterTargetReset is running
Elf.GetBaseAddr(); // returns 0x8000000
Target.ReadU32 (0x08000000); // returns 0x4, data is 0xF826F000
Target.SetReg ("SP", 0xF826F000);
Elf.GetEntryPointPC(); // returns 0x8000000
Target.SetReg ("PC", 0x8000000);
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000000
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000004
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000008
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x800000C
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000010
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000014
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000016
Connection to target device lost.
OnDisconnectTarget() start
OnDisconnectTarget() end - Took 1ms
Disconnected from target device.
Debug.Start();
Device "STM32F407VG" selected.
InitTarget() start
JTAG selected. Identifying JTAG Chain...
TotalIRLen = 9, IRPrint = 0x0011
JTAG chain detection found 2 devices:
 #0 Id: 0x4BA00477, IRLen: 04, CoreSight JTAG-DP
 #1 Id: 0x06431041, IRLen: 05, STM32 Boundary Scan
JTAG Chain Identified. Connecting to DAP TAP...
Successfully connected to selected DAP TAP.
DAP initialized successfully.
InitTarget() end - Took 7ms
TotalIRLen = 9, IRPrint = 0x0011
JTAG chain detection found 2 devices:
 #0 Id: 0x4BA00477, IRLen: 04, CoreSight JTAG-DP
 #1 Id: 0x06431041, IRLen: 05, STM32 Boundary Scan
DPv0 detected
Scanning AP map to find all available APs
AP[1]: Stopped AP scan as end of AP map has been reached
AP[0]: AHB-AP (IDR: 0x24770011)
Iterating through AP map to find AHB-AP to use
AP[0]: Core found
AP[0]: AHB-AP ROM base: 0xE00FF000
CPUID register: 0x410FC241. Implementer code: 0x41 (ARM)
Found Cortex-M4 r0p1, Little endian.
FPUnit: 6 code (BP) slots and 2 literal slots
CoreSight components:
ROMTbl[0] @ E00FF000
[0][0]: E000E000 CID B105E00D PID 000BB00C SCS-M7
[0][1]: E0001000 CID B105E00D PID 003BB002 DWT
[0][2]: E0002000 CID B105E00D PID 002BB003 FPB
[0][3]: E0000000 CID B105E00D PID 003BB001 ITM
[0][4]: E0040000 CID B105900D PID 000BB9A1 TPIU
[0][5]: E0041000 CID B105900D PID 000BB925 ETM
Connected to target device.
Reset: Halt core after reset via DEMCR.VC_CORERESET.
Reset: Reset device via AIRCR.SYSRESETREQ.
T-bit of XPSR is 0 but should be 1. Changed to 1.
Jdebug script: AfterTargetReset is running
Elf.GetBaseAddr(); // returns 0x8000000
Target.ReadU32 (0x08000000); // returns 0x4, data is 0xF826F000
Target.SetReg ("SP", 0xF826F000);
Elf.GetEntryPointPC(); // returns 0x8000000
Target.SetReg ("PC", 0x8000000);
J-Link: Flash download: Bank 0 @ 0x08000000: Skipped. Contents already match
Jdebug script: AfterTargetDownload is running
Elf.GetBaseAddr(); // returns 0x8000000
Target.ReadU32 (0x08000000); // returns 0x4, data is 0xF826F000
Target.SetReg ("SP", 0xF826F000);
Elf.GetEntryPointPC(); // returns 0x8000000
Target.SetReg ("PC", 0x8000000);
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000000
Debug.StepOut();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOut();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepInto();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepInto();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepInto();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepInto();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepInto();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepInto();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepInto();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000076
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000072
Debug.StepOver();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000074
Debug.Continue();
Startup complete (PC=0x080009BC)
Jdebug script: OnStartupComplete is running
Break.Set (0x08000978);
Break.Set (0x08000978): Breakpoint already set.
Debug.Halt();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x80009E6
Debug.Continue();
Jdebug script: AfterTargetHalt is running
Target.GetReg ("R15"); // returns 0x8000978
Target.SaveMemory ("F:\IAR\FW_THO\FW_THO\FW_HuLa-master\output\Gpio\Gpio_TS_001\gcc\debug\result\dump.log", 0x20000013, 0xA);
Debug.Stop();
OnDisconnectTarget() start
OnDisconnectTarget() end - Took 1ms
Disconnected from target device.
File.Exit();
